package com.bntang666.java8;import java.util.ArrayList;import java.util.LinkedList;import java.util.stream.Stream;import static java.util.stream.Collectors.toCollection;/** * @author BNTang */public class StreamExample {    public static void main(String[] args) {        ArrayList<Long> arrayList = Stream.iterate(1L, a -> a + 1L).limit(10000000L).collect(toCollection(ArrayList::new));        LinkedList<Long> linkedList = Stream.iterate(1L, a -> a + 1L).limit(10000000L).collect(toCollection(LinkedList::new));        StreamExample.test(() -> arrayList.parallelStream().reduce(0L, Long::sum));        StreamExample.test(() -> linkedList.parallelStream().reduce(0L, Long::sum));    }    static void test(Runner r) {        long start = System.currentTimeMillis();        r.run();        long end = System.currentTimeMillis();        System.out.println("处理时间：" + (end - start) + "msc");    }}@FunctionalInterfaceinterface Runner {    void run();}